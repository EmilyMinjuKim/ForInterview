MySQL

-- select all (*)
SELECT * FROM emp;

-- 비교연산 (WHERE)
SELECT ename, sal FROM emp WHERE sal<3000;

-- 문자로 검색
SELECT empno, ename, sal FROM emp WHERE ename='FORD';

-- 날짜로 검색
SELECT ename FROM emp WHERE TO_CHAR(HIREDATE, 'YYYYMMDD') > '19820101';
SELECT * FROM emp WHERE hiredate >= '1982/01/01';
SELECT * FROM emp WHERE hiredate BETWEEN '1980/01/01' AND '1980/12/31';

-- OR
SELECT * FROM emp WHERE deptno = 10 OR job = 'MANAGER';

-- 커미션이 300/500/1400 중 하나인 사람
SELECT * FROM emp WHERE comm IN (300, 500, 1400);

-- NOT
SELECT * FROM emp WHERE deptno <> 10;
SELECT * FROM emp WHERE sal not BETWEEN 2000 AND 3000;

-- 이름이 F로 시작하는 모든 사람
SELECT * FROM emp WHERE ename LIKE 'F%';

-- 위치 상관없이 이름 중에 A가 들어가는 사람
SELECT * FROM emp WHERE ename LIKE '%A%';

-- 이름이 N으로 끝나는 사람
SELECT * FROM emp WHERE ename LIKE '%N';

-- 두 번째 글자가 A인 사원(언더바 하나)
SELECT * FROM emp WHERE ename LIKE '_A%';

-- 세 번째 글자가 A인 사원(언더바 두 개)
SELECT * FROM emp WHERE ename LIKE '__A%'; 

-- 이름에 A를 포함하지 않는 사람
SELECT * FROM emp WHERE ename not LIKE '%A%';

-- NULL 연산자
SELECT * FROM emp WHERE comm IS NULL;
SELECT * FROM emp WHERE comm IS not NULL;

-- order by절 / 사원들의 급여를 오름차순으로 정렬
SELECT * FROM emp ORDER BY sal ASC;
SELECT * FROM emp ORDER BY sal DESC;

-- 가장 최근에 입사한 사원부터 출력
SELECT * FROM emp ORDER BY hiredate DESC;

-- 사원들이 소속되어 있는 부서 번호를 '중복없이' 출력
SELECT DISTINCT deptno FROM emp;

-- 테스트용 테이블 (DUAL)
-- 산술연산의 결과를 한 줄로 출력하기 위해서 오라클에서 제공하는 테이블.
-- sysdate: 오늘 날짜
SELECT 24*60 FROM DUAL;
SELECT sysdate FROM DUAL; 

-- 절대값 ABS
SELECT ABS(-10) FROM DUAL;

-- 소수점 내림 FLOOR
SELECT FLOOR(34.5432) FROM DUAL;

-- 소수점 반올림 ROUND
SELECT ROUND(34.5432) FROM DUAL;

-- 특정 자리수에서 반올림(34.54)
SELECT ROUND(34.5432, 2) FROM DUAL;

-- 소수점 아래 버림 TRUNC
SELECT TRUNC(34.5432, 2), TRUNC(34.5432, -1), TRUNC(34.5432), TRUNC(34.5432, 0) FROM DUAL;

-- 나눗셈 후 나머지 결과를 되돌려주는 함수 MOD
SELECT MOD(27, 2), MOD(27, 5), MOD(27, 7) FROM DUAL;

-- 대문자 변환 함수 UPPER <-> LOWER
-- 별칭 as: column명 
SELECT 'Welcome to Oracle' as "적용전", UPPER('Welcome to Oracle') as "적용후" FROM DUAL;

-- 문자 수 세기 LENGTH // B는 바이트 크기(영문 1, 그 외 3 바이트)
SELECT LENGTH('Oracle'), LENGTH('오라클') FROM DUAL; 
SELECT LENGTHB('Oracle'), LENGTHB('오라클') FROM DUAL;

-- 특정 문자의 위치를 구하는 함수 INSTR
SELECT INSTR('Welcome to Oracle', 'O') FROM DUAL;

-- index 4부터 시작해서 문자 3개를 추출하는 쿼리문(오라클에서 인덱스는 0이 아닌 1부터 시작한다) SUBSTR
SELECT SUBSTR('Welcome to Oracle', 4, 3) FROM DUAL;

-- 사원들의 입사일에서 입사년도와 입사달을 출력하는 쿼리문
-- date형 문자도 substring으로 잘라낼 수 있음.
-- 19|| : 잘라낸 문자 앞에 19를 붙이는 것.
SELECT ename, 19||SUBSTR(HIREDATE, 1, 2) as 년도, SUBSTR(HIREDATE, 4, 2) as 달 FROM emp;

-- 문자열 자리 20개 중 #을 왼쪽에 채우고 나머지를 ORACLE로 채우기 (LPAD)
-- 오른쪽 RPAD
SELECT LPAD('ORACLE', 20, '#') FROM DUAL;

-- 공백 문자 삭제 LTRIM, RTRIM
-- TRIM은 양 사이드 공백 없애기
SELECT LTRIM(' ORACLE') FROM DUAL;

-- 출력값: ORACLE
SELECT TRIM('a' FROM 'aaaaORACLEaaaa') FROM DUAL;

-- 날짜 연산
SELECT SYSDATE -1 FROM DUAL;
SELECT SYSDATE -1 어제, SYSDATE 오늘, SYSDATE +1 내일 FROM DUAL;

-- 각 직원들이 근무한 개월 수
SELECT ename, sysdate, hiredate,
trunc(MONTHS_BETWEEN(sysdate, hiredate)) 근무개월수 from emp;

-- 입사날짜에서 4개월 추가
SELECT ename, hiredate, trunc(ADD_MONTHS(hiredate, 4)) from emp;

--해당 달의 마지막 날짜 반환
SELECT ename, hiredate, LAST_DAY(hiredate) from emp;
SELECT LAST_DAY(sysdate) 이번달마지막날 from dual;

-- 형 변환 함수
-- 현재 날짜를 문자형으로 변환
SELECT TO_CHAR(sysdate, 'YYYY-MM-DD') from dual;

-- 현재 날짜와 시간
SELECT TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS') 시간 from dual;

-- 각 지역별 통화 기호를 앞에 붙이고 천 단위마다 콤마를 붙여서 출력하는 쿼리문(예: $1,400,000)
SELECT ename, sal , TO_CHAR(sal, 'L9999,999') from emp;

-- TO_DATE
SELECT ename, hiredate from emp where hiredate=TO_DATE(19810220, 'YYYYMMDD');

-- 올해 며칠이 지났는지 현재 날짜에서 2016/01/01을 뺀 값
SELECT trunc(sysdate - TO_DATE('2016/01/01', 'YYYY/MM/DD')) from dual;

-- TO_NUMBER
SELECT TO_NUMBER('20,000', '99,999') - TO_NUMBER('10,000', '99,999') from dual;

-- null을 다른 값으로 변환하는 NVL함수
SELECT ename, sal, NVL(comm,0), job from emp order by job;

--case 함수
SELECT ename, deptno, 
                        CASE WHEN deptno=10 THEN 'ACCOUNTING'
                            WHEN deptno=20 THEN 'RESEARCH'
                            WHEN deptno=30 THEN 'SALES'
                            WHEN deptno=40 THEN 'OPERATING'
                        END as 부서명
FROM emp;

-- 그룹 함수
-- 전체 사원 급여의 합
SELECT sum(sal) from emp;

--급여 평균
SELECT avg(sal) from emp;

--가장 높은 급여, 낮은 급여
SELECT max(sal), min(sal) from emp;

-- 사원 테이블의 사원들 중 커미션을 받는 사원의 수
select count(comm) from emp;

-- 중복 제거를 반영하여 담당 업무의 개수를 구하는 쿼리문
select count(distinct(job)) from emp;

--group by 절, having 절
--특정 칼럼을 기준으로 그룹화
--부서 번호 출력
select DISTINCT deptno from emp;
select deptno from emp GROUP BY deptno;

-- 소속 부서별 급여 평균
select trunc(AVG(sal)), deptno from emp GROUP BY deptno;

--group by에 대한 조건은 having으로
SELECT deptno, avg(sal) from emp GROUP BY deptno HAVING avg(sal) >= 2000;

--부서의 salary 최대값, 최소값을 구하되 최대 급여가 2000 이상인 부서만 출력
SELECT deptno, min(sal), max(sal) from emp GROUP BY deptno HAVING avg(sal) >= 2000;

--이름이 smith인 사람의 부서명
