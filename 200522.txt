1. 절대 경로와 상대경로에 대하여 설명하시오.
절대 경로: C:\ 혹은 D:\를 기준으로 지정한 경로. 이렇게 지정된 경로는 상황에 따라 그 경로가 바뀌지 않음.
상대 경로: '현재 디렉토리'를 기준으로 표현된 파일이나 디렉토리의 위치. 현재 디렉토리가 바뀌면 상대 경로가 지정하는 모든 경로가 그에 맞게 수정됨.

2. set classpath=.;~~~~~~~~~~~  에서 classpath의 용도는?
JVM의 클래스 탐색 경로

3. 아래를 코딩 하시오.
GuguDan gu = new GuGuDan(7);
gu.show();  // 7단 출력
gu.setDan(8);
gu.show()  // 8단 출력.

public class GuguDan {
	int dan;
	GuguDan (int dan) {
		this.dan = dan;
	}

	void setDan (int dan) {
		this.dan = dan;
	}
	
	void show () {
		for (int i = 1; i < 10; i++) {
			System.out.println(dan + " x " + i + " = " + dan*i);	
			}
		}
		
}



아래는 메인함수
GuguDan gu = new GuguDan(7);
gu.show();
		
gu.setDan(8);
gu.show();




4.패키지란 무엇이며, 용도는?
패키지는 클래스를 묶는 수단이다.
패키지 선언은 클래스의 접근 방법을 구분하고 클래스 파일이 공간적으로도 구분되게 한다.
그래서 동일한 클래스 명을 사용하더라도 충돌하는 것을 방지할 수 있다.

5.정보은닉이란?
인스턴스 변수에 대한 직접적인 접근을 허용하지 않도록 클래스를 설계하는 것.

6.아래의 프로그래밍을 하시오.
StarPrint sp = new StarPrint(5);
sp.floorShow(); //5층 피라밋
sp.setFloor(3); 
sp.floorShow(); //3층 피라밋
  *
 ***
*****



public class StarPrint {
	int floor;
	
	StarPrint (int floor) {
		this.floor = floor;
	}
	
	void setFloor (int f) {
		floor = f;
	}
	
	void floorShow () {
		for (int i = 0; i < floor; i++) {
			for (int j = 0; j < floor; j++) {
				System.out.print(j<(floor-1-i)?" ":"* ");
				} 
			System.out.println();
			}
		
		}

}








7.객체지향 언어의 특징 4가지는(설명은 안해도 좋음)?
상속 Inheritance
정보 은닉 Information Hiding
다형성 Polymorphism
캡슐화 Encapsulation

8. 아래의 접근 범위를 설명하시오.
-클래스 내에서의 public 과 default.
public: 위치에 상관없이 어디서든 해당 클래스의 인스턴스 생성 가능.
default: 동일 패키지로 묶인 클래스 내에서만 인스턴스 생성 가능.

-멤버변수와 함수의 private , default, protected(이거는 나중에)

9.캡슐화에 대하여 설명하시오.
하나의 목적을 이루기 위해 관련 있는 모든 것을 하나의 클래스에 담아 두는 것.

10. 아래의 프로그램을 작성 하시오.

		Triangle t1 = new Triangle(10, 20);
		Triangle t2 = new Triangle(10, 20);
		Triangle t3 = new Triangle(10, 10);
		
		t1.equalTriangle(t2);
		t1.equalTriangle(t3);

===출력====
같은 삼각형 입니다.
다른 삼각형 입니다.





public class Triangle {
	int width;
	int height;
	
	Triangle (int width, int height) {
		this.width = width;
		this.height = height;
	}
	
	void equalTriangle (Triangle t) {
		if (t.width == this.width && t.height == this.height) {
			System.out.println("같은 삼각형입니다.");
		} else {
			System.out.println("다른 삼각형입니다.");
		}
	}
	
}












11.디자인패턴 책의 저자의 이름은 누구이며, 소개된 패턴의 이름만 한번씩 읽어 보세요.