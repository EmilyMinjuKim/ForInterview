1.jsp 가 WAS 에서 돌아가는 원리를 설명하시오.
jsp는 서블릿(자바 파일)으로 변환되어 실행.

[서블릿]
-java thread를 이용하여 동작. 따라서 클라이언트로부터 요청이 많이 들어와도 서버 과부화가 적게 걸리는 장점이 있음.
-JAVA언어를 사용하여 웹 프로그램을 제작하는 것.


[MVP패턴]
클라이언트 - (request) -> Controller/servlet     ->  Model/DB   -> Controller ->   View/jsp - (response) -> 클라이언트 
		       무엇을 작업해야 하는 지 	      사용자에게 보여줄 
		       판단 후 해당 컴포넌트에	      해당 jsp파일에게
		       넘김			      작업 결과를 넘김

톰캣:      request 객체 생성							     response 객체 생성

[JSP 아키텍처]
.jsp file (개발자는 여기까지 작성) -> Java file - (컴파일) -> class file


2.아래에 대하여 설명하시오.
요청하는 두 가지 방식, get/post
-doGet
url을 통해서 유저가 보낸 정보를 받아냄. 보안에 약함.
html내 form태그의 method속성이 get일 경우 호출됨. 웹브라우저의 주소창을 이용하여 servlet을 요청한 경우에도 호출됨.

-doPost
header를 이용해 정보가 전송되어 보안에 강함.
html내 form태그의 method속성이 post일 경우 호출됨.

-@WebServlet("/hworld") : 어노테이션을 이용한 서블릿 맵핑
WebServlet이라는 어노테이션 키워드로 클래스의 닉네임(/hworld) 설정.
닉네임은 웹브라우저에서 접근할 때 이용됨.

(서블릿 맵핑: url경로가 너무 길고 보안에 노출되어 있으므로 경로를 간단하기 하기 위해 맵핑함 - web.xml을 통해 맵핑할 수도 있음)

-HttpServlet
Servlet 클래스는 기본적으로 HttpServlet 클래스를  상속 받음.

 Servlet (Interface)
	|
GenericServlet (abstract)
	|
     HttpServlet


3.float 와 overflow에 대하여 설명하시오.
float: float는 요소를 왼쪽 또는 오른쪽에 배치할 때 유용한 속성. float 속성을 부여한 요소의 다음 요소는 float 속성을 부여한 요소가 차지하는 위치만 
제외하고 나머지 공간을 채움. 사진을 왼쪽 또는 오른쪽에 배치하고 그 주위를 텍스트로 채울 때 사용하거나, 사이트 레이아웃을 만들 때 사용.

overflow: 내용이 요소의 크기를 벗어났을 때 어떻게 처리할지를 정하는 속성. 내
용이 주어진 공간에 다 들어가지 않을 때, 보여주게 할 수도 있고, 안 보이게 할 수도 있고, 스크롤바를 만들게 할 수도 있음.

4.아래의 속성을 설명하시오.
-block: 자동 개행. 상하좌우 공간을 가짐.
-inline: 개행x. 상하공간x. 좌우 공간0.
-inline-block: 개행x. 상하좌우공간 가짐.
-display:none : 화면에 아예 출력되지 않음.
-visivility:hidden : 화면에 출력되지는 않지만 빈 공간이 표시됨.

5.13-1 구현 하시오.
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="EUC-KR">
<title>Insert title here</title>
	<style>
		div{
			border:1px solid #cccccc;
			padding:5px; margin:5px;
			text-align:center;
		}
		
		#con{
			width:800px;
			margin:0 auto;
			overflow:hidden;
		}
	
		#header{
			width:780px; height:100px;
			line-height:100px;
		}
		
		#nav {
			width:780px; height:100px;	
		}
		
		#nav ul{overflow:hidden;}
		
		#nav ul li{
			width:138px; height:40px;
			line-height:40px;
			text-align:center;
			list-style:none;
			float:left;
			border:1px solid #dddddd;
		}
		
		#wrap{
			width:780px;
			overflow:hidden;
		}
		
		#content{
			width:600px; height:300px;
			float:left;
		}
		
		#banner{
			width:135px; height:300px;
			float:left;
		}
		
		#footer{
			width:780px; height:100px;
			line-height:100px;
		}
	</style>
</head>
<body>
	<div id="con">
		<div id="header">
			HEADER
		</div>
		
		<div id="nav">
			<p>NAVIGATION</p>
			<ul>
				<li>menu1</li>
				<li>menu2</li>
				<li>menu3</li>
				<li>menu4</li>
				<li>menu5</li>
			</ul>
		</div>
		
		<div id="wrap">
			<div id="content">CONTENT</div>
			<div id="banner">BANNER</div>
		</div>
		
		<div id="footer">
			FOOTER
		</div>
	</div>
</body>
</html>