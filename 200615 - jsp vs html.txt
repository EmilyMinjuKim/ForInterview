1. 아래의 ThreadWithClass 와 ThreadWithRunnable 을 구현하시오.

public class Thread01 {

    public static void main(String[] args){

        ThreadWithClass thread1 = new ThreadWithClass();       // Thread 클래스를 상속받는 방법

        Thread thread2 = new Thread(new ThreadWithRunnable()); // Runnable 인터페이스를 구현하는 방법 

        thread1.start(); // 스레드의 실행
        thread2.start(); // 스레드의 실행
    }
}

=============================================================

class ThreadWithRunnable implements Runnable{
	public void run() {
		
	}
}

class ThreadWithClass extends Thread{
	public void run() {
		
	}
}


2.웹서버와 WAS에 대하여 설명하시오.
   (정적)	 (동적)

Web Server의 개념
소프트웨어와 하드웨어로 구분된다.
1) 하드웨어
: Web 서버가 설치되어 있는 컴퓨터
2) 소프트웨어
: 웹 브라우저 클라이언트로부터 HTTP 요청을 받아 정적인 컨텐츠(.html .jpeg .css 등)를 제공하는 컴퓨터 프로그램

Web Server의 기능
-HTTP 프로토콜을 기반으로 하여 클라이언트(웹 브라우저 또는 웹 크롤러)의 요청을 서비스하는 기능을 담당한다.
-요청에 따라 아래의 두 가지 기능 중 적절하게 선택하여 수행한다.
기능 1)
"정적인" 컨텐츠 제공
WAS를 거치지 않고 바로 자원을 제공한다.
기능 2)
동적인 컨텐츠 제공을 위한 "요청 전달"
클라이언트의 요청(Request)을 WAS에 보내고, WAS가 처리한 결과를 클라이언트에게 전달(응답, Response)한다.
클라이언트는 일반적으로 웹 브라우저를 의미한다.


WAS의 개념
-DB 조회나 다양한 로직 처리를 요구하는 "동적인" 컨텐츠를 제공하기 위해 만들어진 Application Server
-HTTP를 통해 컴퓨터나 장치에 애플리케이션을 수행해주는 미들웨어(소프트웨어 엔진)이다.

WAS의 역할
-WAS = Web Server + Web Container
-Web Server 기능들을 구조적으로 분리하여 처리하고자 하는 목적으로 제시되었다.
분산 트랜잭션, 보안, 메시징, 쓰레드 처리 등의 기능을 처리하는 분산 환경에서 사용된다.
주로 DB 서버와 같이 수행된다.



3. .jsp 와 .html 의 차이는?
전자- 동적 / 후자- 정적
JSP: Java Server Page

4.html 8장 - 조별 학습
