[ Spring MVC의 정적 리소스 처리 ]

정적 리소스: 컴파일이 필요없는 파일
ex) html, css, js, image, txt, ... 등등 jsp 이외의 파일

servlet-context.xml <--여기서 처리함
===============================================================
<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources 
in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
===============================================================
##
<resources mapping="리소스에 접근할 URL 패턴" location="리소스가 있는 물리적 위치" />
mapping
1) /resources/** 의 앞자리
http://.../context명
2) **: 리소스로 들어오는 모든 것

location
1)location에는 폴더명만 입력. 파일명은 필요x.
2)
webapp(root): user가 URL로 접근 가능 but, MVC패턴 사용 불가.
      - resources: user가 URL로 접근 가능. 정적 리소스 보관
      - WEB-INF: user 접근 불가. xml파일들 보관. 이쪽으로 URL이 들어오면 Controller 받아서 맵핑함.





img를 삽입하려는 jsp 코드 안에 
================================
<body>
	<img src="resources/파일명.jpg">
</body>
================================
추가

##resources/파일명.jpg vs /resources/파일명.jpg 차이




Spring에서의 URL 처리의 기본
DispatcherServlet이 모든 URL처리를 가로채는 구조

##URL(Uniform Resource Locator)
원격컴퓨터에 있는 리소스를 찾기 위한 주소.
단, URL로는 물리적 주소를 지정할 수 없으므로 서버에서 맵핑해줘야 함.

URL("/") - DispatcherServlet - Controller(RequestMapping)
		           - but, 정적 리소스는 Controller 거치지 않음
		        	 ↘ servlet-context.xml에서 예외처리함








[ MVC2 생성 순서 ]
pom.xml - oracle 다운(ctrl+shift+alt+L에서 기존 프로젝트에서 찾기. oracle, repository 복붙)
	- lombok 다운
web.xml - 한글처리

DTO -> BoardVO
DAO -> BoardMapper
Command -> BoardService





@Component: 객체를 읽어냄. 
servlet.xml에 component-scan하라고 셋팅해놓음. 
@를 스캔함. annotation으로 메모리(IoC컨테이너)에 클래스를 올림.

@Controller
@Service
@Repository

@Autowired - 변수명 위에 선언시, IoC 컨테이너 안에 있는 Bean을 자동으로 주입. class 내에서 객체 생성시 사용.
https://itjava.tistory.com/54 참고






html - 시멘틱(semantic) 태그
<article> = <div> + 의미
<main>
<nav> 