
1. 아래의 interface 를 구현하시오.
interface IGugudan{
void gugugdan();      //구구단 출력
}



2.아래의 interface 를 구현하시오.
interface IStarPrint{
	void starPrint(int n); //      
}

    *
   * *
  * * *
 * * * *
* * * * *

interface StarPoint {
	void starPoint(int n);
}

class Star implements StarPoint {
	@Override
	public void starPoint (int n) {
		String star;
		for (int i = 0; i < n; i++) {
			for (int j = n-1; j >= 0; j--) {
				star = (i >= j) ? "* " : " ";
				System.out.print(star);
			}
			System.out.println();
		}
	}
}

public class TwinkleStar {

	public static void main(String[] args) {
		Star twinkle = new Star();
		twinkle.starPoint(5);
	}

}

3. wrapper 클래스에 대하여 설명하시오.
인스턴스 참조값을 요구하는 자리에 기본 자료형의 값을 놓아야 할 때 사용한다. 

4.boxing 과 unboxing 에 대하여 설명하시오.
박싱: 값을 인스턴스에 감싸는 행위
언박싱: 저장된 값을 꺼내는 행위

5.아래의 메모리를 그리고, 컴파일러가 실행하는 구문을 적으시오.
 Integer num = 10;
   num++;


6.오토박싱과 언박싱에 대하여 설명하시오.
자바 5부터 박싱과 언박싱이 필요한 상황에서 이를 자동으로 처리하기 시작함.

7.461page 20-1 번 푸시오.

8.가위바위보 게임을 조별로 어떻게 짜면 되는지 논의 하고,가위바위보 게임을 완성하시오. 

import java.util.InputMismatchException;
import java.util.Random;
import java.util.Scanner;

class Voca {
	int num;
	public static void showVoca(int num) {
		
		switch(num) {
		case 0 : 
			System.out.println("나는 가위");
			break;
		case 1 : 
			System.out.println("나는 바위");
			break;
		case 2 : 
			System.out.println("나는 보");
			break;
		}
		
	}
}

public class Rock {

	public static void main(String[] args) {

		int user = 0;
		char answer = 0;
		boolean process = true;
		
		try {
			while(process) {
				Scanner sc = new Scanner(System.in);
				System.out.println("0.가위 1.바위 2.보 ");
				user = sc.nextInt();
				if (user > 2 || user < 0) {
					System.out.println("제대로된 값을 입력해주세요.");
					break;
				}
	
				Random rand = new Random();
				int computer = rand.nextInt(3);
				Voca.showVoca(computer);
		
				
				if(user == computer) {
					System.out.println("우리는 비겼습니다");
				} else if ((user == 0 && computer == 1) || (user == 1 && computer == 2) || (user == 2 && computer == 0)) {
					System.out.println("당신은 패배");
				} else {
					System.out.println("당신의 승");
				}
		
				System.out.println("또 하실래용? Y or N: ");
				answer = sc.next().charAt(0);
				if(answer == 'y' || answer == 'Y') {
					process = true;
				} else if(answer == 'n' || answer == 'N') {
					process = false;
				} else {
					System.out.println("Y or N로 대답하라니까요");
					process = false;
				}
			}
		} catch(InputMismatchException e) {
			e.getStackTrace();
			System.out.println("제대로 된 값을 입력해야죠");
		}
		System.out.println("안뇽 다음에 또 봐용");
		

	}

}
